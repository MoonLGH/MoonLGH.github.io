{"mappings":"AAAA,IAAIA,MAAQC,SAASC,eAAe,YAUpCC,eAAeC,IAAIC,GACf,MAAMC,QAAYC,MAAM,gCAAgCF,KAClDG,QAAaF,EAAIG,OACvBR,SAASC,eAAe,YAAYQ,IAAMF,EAAKG,WAC/CC,QAAQC,IAAIL,EAAKG,W,CAZrBG,aAAY,KACkB,UAAtBd,MAAMe,YACNf,MAAMe,YAAc,UAEpBf,MAAMe,YAAc,OAAO,GAEhC,MASHX,IAAI,WAEJ,IAAIY,aAAe,CAAC,YAAY,cAAc,cAAc,oBAAoB,qBAChFb,eAAec,WACX,MAAMX,QAAYC,MAAM,2DACxB,IAAIC,QAAaF,EAAIG,OACjBS,EAAI,EACRV,EAAOA,EAAKW,MAAK,CAACC,EAAEC,IAAMA,EAAEC,iBAAmBF,EAAEE,mBAC9CN,aAAaO,OAAS,IACrBf,EAAOA,EAAKgB,QAAOC,GAAKT,aAAaU,SAASD,EAAEpB,SAGpDO,QAAQC,IAAIL,GACZ,IAAK,IAAImB,KAAQnB,EAAK,CAClBU,IACA,IAAIU,EAAkBD,EAAKE,YAAcC,UAAUH,EAAKE,aAAe,2BACnEE,EAAO,mCACab,EAAI,GAAK,SAAW,yFAAyFS,EAAKK,KAAO,YAAc,qBACzJL,EAAKK,KAAO,iEAAmE,6GAE5CF,UAAUH,EAAKtB,kCAC3CuB,kLAGgED,EAAKL,2BAA2BK,EAAKM,sHACxCN,EAAKO,gEAInFjC,SAASkC,cAAc,UAAUC,WAAaL,C,CAE3CvB,EAAKe,QAAU,IACdc,kB,CAKR,SAASP,UAAUC,GACf,OAAGA,EAAKR,QAAU,GACPQ,EAAKO,OAAO,EAAE,IAAM,MAExBP,C,CAGX,SAASM,mBACL,IAAIE,EAAStC,SAASuC,cAAc,UACpCD,EAAOE,UAAUC,IAAQ,MAAM,eAC/BH,EAAOI,aAAa,KAAK,cACzBJ,EAAOK,UAAY,YACnBL,EAAOI,aAAa,UAAU,aAC9B1C,SAASC,eAAe,mBAAmB2C,YAAYN,E,CAG3D,SAASO,UACL,IAAIC,EAAM9C,SAASkC,cAAc,eACZ,cAAlBY,EAAIH,UACH3C,SAAS+C,iBAAiB,uBAAuBC,SAASC,IACtDA,EAAGT,UAAUU,OAAO,UACpBD,EAAGT,UAAUC,IAAI,iBACjBK,EAAIH,UAAY,WAAW,IAG/B3C,SAAS+C,iBAAiB,8BAA8BC,SAASC,IAC7DA,EAAGT,UAAUC,IAAI,UACjBQ,EAAGT,UAAUU,OAAO,iBACpBJ,EAAIH,UAAY,WAAW,G,CA9BvC3B","sources":["src/assets/js/index.js"],"sourcesContent":["let Brand = document.getElementById(\"NavBrand\")\n\nsetInterval(() => {\n    if (Brand.textContent === \"MoonL\") {\n        Brand.textContent = \"Tsukari\"\n    } else {\n        Brand.textContent = \"MoonL\"\n    }\n}, 1500)\n\nasync function get(name) {\n    const res = await fetch(`https://api.github.com/users/${name}`)\n    const data = await res.json()\n    document.getElementById(\"GHAvatar\").src = data.avatar_url\n    console.log(data.avatar_url)\n}\n\nget(\"MoonLGH\")\n\nlet selectedRepo = [\"TcukawiWa\",\"Tsukari-Bot\",\"nHentParser\",\"BeatmapDownloader\",\"MoonLGH.github.io\"] \nasync function getRepos() {\n    const res = await fetch(`https://api.github.com/users/MoonLGH/repos?per_page=100`)\n    let data = await res.json()\n    let i = 0\n    data = data.sort((a,b) => b.stargazers_count - a.stargazers_count)\n    if(selectedRepo.length > 1) {\n        data = data.filter(r => selectedRepo.includes(r.name))\n        // hiding the show more\n    }\n    console.log(data)\n    for (let repo of data){\n        i++\n        let repoDescription = repo.description ? parseDesc(repo.description) : \"No Description Specified\";\n        let text = `\n        <div class=\"card w-64 ${i > 10 ? \"hidden\" : \"\"} overflow-visible dark:text-white shadow-xl dark:bg-gray-800 place-self-center h-52 ${repo.fork ? \"indicator\" : \"\"}\">\n            ${repo.fork ? '<span class=\"indicator-item badge badge-primary\">Forked</span>' : \"\"}\n            <div class=\"card-body flex-none my-auto\">\n                <h2 class=\"card-title mx-auto\">${parseDesc(repo.name)}</h2>\n                <p>${repoDescription}</p>\n            </div>\n            <div class=\"card-actions pb-5 text-center mx-auto\">\n                <button class=\"btn btn-primary justify-end tooltip\" data-tip=\"Star:${repo.stargazers_count}\\nForks:${repo.forks_count}\">Information</button>\n                <a class=\"btn btn-primary justify-end\" href=\"https://github.com/${repo.full_name}\">Open</a>\n            </div>\n        </div>\n    `\n    document.querySelector(\"#repos\").innerHTML += text\n    }\n    if(data.length >= 10){\n        MakeToggleButton()\n    }\n}\ngetRepos()\n\nfunction parseDesc(text){\n    if(text.length >= 20) {\n        return text.substr(0,20) + \"...\"\n    }\n    return text\n}\n\nfunction MakeToggleButton(){\n    let button = document.createElement(\"button\")\n    button.classList.add(...[\"btn\",\"btn-primary\"])\n    button.setAttribute(\"id\",\"ToggleRepo\")\n    button.innerText = \"Show More\"\n    button.setAttribute(\"onclick\",\"TogRepo()\")\n    document.getElementById(\"PlaceholderRepo\").appendChild(button)\n}\n\nfunction TogRepo() {\n    let btn = document.querySelector(\"#ToggleRepo\")\n    if(btn.innerText === \"SHOW MORE\"){\n        document.querySelectorAll(\"#repos > div.hidden\").forEach((el)=>{\n            el.classList.remove(\"hidden\")\n            el.classList.add(\"hiddenToggled\")\n            btn.innerText = \"Show Less\"\n        })\n    }else {\n        document.querySelectorAll(\"#repos > div.hiddenToggled\").forEach((el)=>{\n            el.classList.add(\"hidden\")\n            el.classList.remove(\"hiddenToggled\")\n            btn.innerText = \"Show More\"\n        })\n    }\n}\n\n// const scrollPage = new ScrollPage(\"#content-wrapper\",{\n//     pages:{\n// \t    //for page 1\n//         1:{\n//             animation:\"easeInQuart\",\n//             time:1000\n//         },\n//         //for page 2\n//         2:{\n//             animation:\"easeOutQuint\",\n//             time:500\n//         },\n//         //for page 3\n//         3:{\n//             animation:\"easeOutCubic\",\n//             time:700\n//         }\n//     }\n// }); "],"names":["Brand","document","getElementById","async","get","name","res","fetch","data","json","src","avatar_url","console","log","setInterval","textContent","selectedRepo","getRepos","i","sort","a","b","stargazers_count","length","filter","r","includes","repo","repoDescription","description","parseDesc","text","fork","forks_count","full_name","querySelector","innerHTML","MakeToggleButton","substr","button","createElement","classList","add","setAttribute","innerText","appendChild","TogRepo","btn","querySelectorAll","forEach","el","remove"],"version":3,"file":"index.2052d8ef.js.map"}