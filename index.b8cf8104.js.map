{"mappings":"AAAA,IAAIA,MAAQC,SAASC,eAAe,YAUpCC,eAAeC,IAAIC,GACf,MAAMC,QAAYC,MAAM,gCAAgCF,KAClDG,QAAaF,EAAIG,OACjBC,EAAKT,SAASC,eAAe,YAC/BQ,IACAA,EAAGC,IAAMH,EAAKI,YAElBC,QAAQC,IAAIN,EAAKI,WACrB,CAhBAG,aAAY,KACkB,UAAtBf,MAAMgB,YACNhB,MAAMgB,YAAc,UAEpBhB,MAAMgB,YAAc,UAEzB,MAYHZ,IAAI,WAEJ,IAAIa,aAAe,CAAC,YAAa,cAAe,cAAe,oBAAqB,oBAAqB,WAAY,qBACjHC,KAAO,CAAC,CACRb,KAAM,4BACNc,WAAY,8GAEhBhB,eAAeiB,WACX,MAAMd,QAAYC,MAAM,2DACxB,IAAIC,QAAaF,EAAIG,OACrB,MAAMY,QAAad,MAAM,kEACzB,IAAIe,QAAcD,EAAKZ,OAEvB,IAAK,IAAIc,EAAI,EAAGA,EAAIL,KAAKM,OAAQD,IAAK,CAClC,MAAME,EAAUP,KAAKK,GACrB,IAAIG,QAAenB,MAAM,gCAAgCkB,EAAQpB,QACjEG,EAAKmB,WAAYD,EAAOjB,OAC5B,CACAD,EAAO,IAAIA,KAASc,GACpBT,QAAQC,IAAIN,GACZ,IAAIoB,EAAI,EACRpB,EAAOA,EAAKqB,MAAK,CAACC,EAAGC,IAAMA,EAAEC,iBAAmBF,EAAEE,mBAC9Cf,aAAaO,OAAS,IACtBhB,EAAOA,EAAKyB,QAAOC,GAAKjB,aAAakB,SAASD,EAAE7B,SAGpDQ,QAAQC,IAAIN,GACZ,IAAK,IAAI4B,KAAQ5B,EAAM,CACnBoB,IACA,IAAIS,EAAkBD,EAAKE,YAAcC,UAAUH,EAAKE,aAAe,2BACnEE,EAAO,mCACaZ,EAAI,GAAK,SAAW,8FAA8FQ,EAAKK,KAAO,YAAc,qBAC9JL,EAAKK,KAAO,iEAAmE,6GAE5CF,UAAUH,EAAK/B,kCAC3CgC,kLAGgED,EAAKJ,8BAA8BI,EAAKM,mBAAmBxB,KAAKyB,MAAKb,GAAKA,EAAEzB,OAAS+B,EAAKQ,YAAa,eAAe1B,KAAKyB,MAAKb,GAAKA,EAAEzB,OAAS+B,EAAKQ,YAAWzB,aAAe,6GAClLiB,EAAKQ,gEAI/E,MAAMlC,EAAKT,SAAS4C,cAAc,UAC9BnC,IACAA,EAAGoC,WAAaN,GAEhBhC,EAAKgB,QAAU,IACfuB,kBAER,CACJ,CAGA,SAASR,UAAUC,GACf,OAAIA,EAAKhB,QAAU,GACRgB,EAAKQ,OAAO,EAAG,IAAM,MAEzBR,CACX,CAEA,SAASO,mBACL,IAAIE,EAAShD,SAASiD,cAAc,UACpCD,EAAOE,UAAUC,IAAQ,MAAO,eAChCH,EAAOI,aAAa,KAAM,cAC1BJ,EAAOK,UAAY,YACnBL,EAAOI,aAAa,UAAW,aAC/B,MAAMjB,EAAOnC,SAASC,eAAe,mBACjCkC,GACAA,EAAKmB,YAAYN,EAEzB,CAEA,SAASO,UACL,IAAIC,EAAMxD,SAAS4C,cAAc,eACX,cAAlBY,EAAIH,UACJrD,SAASyD,iBAAiB,uBAAuBC,SAASjD,IACtDA,EAAGyC,UAAUS,OAAO,UACpBlD,EAAGyC,UAAUC,IAAI,iBACjBK,EAAIH,UAAY,eAGpBrD,SAASyD,iBAAiB,8BAA8BC,SAASjD,IAC7DA,EAAGyC,UAAUC,IAAI,UACjB1C,EAAGyC,UAAUS,OAAO,iBACpBH,EAAIH,UAAY,cAG5B,CApCAlC","sources":["src/assets/js/index.js"],"sourcesContent":["let Brand = document.getElementById(\"NavBrand\")\n\nsetInterval(() => {\n    if (Brand.textContent === \"MoonL\") {\n        Brand.textContent = \"Tsukari\"\n    } else {\n        Brand.textContent = \"MoonL\"\n    }\n}, 1500)\n\nasync function get(name) {\n    const res = await fetch(`https://api.github.com/users/${name}`)\n    const data = await res.json()\n    const el = document.getElementById(\"GHAvatar\")\n    if (el) {\n        el.src = data.avatar_url\n    }\n    console.log(data.avatar_url)\n}\n\nget(\"MoonLGH\")\n\nlet selectedRepo = [\"TcukawiWa\", \"Tsukari-Bot\", \"nHentParser\", \"BeatmapDownloader\", \"MoonLGH.github.io\", \"nekoWrap\", \"RPLSaci.github.io\"]\nlet more = [{\n    name: \"RPLSaci/RPLSaci.github.io\",\n    additional: \"This website is my extraculicular website, which being used as the school official extraculicular website\"\n}]\nasync function getRepos() {\n    const res = await fetch(`https://api.github.com/users/MoonLGH/repos?per_page=200`)\n    let data = await res.json()\n    const res2 = await fetch(`https://api.github.com/users/MoonLGH/repos?page=2&per_page=200`)\n    let data2 = await res2.json()\n\n    for (let i = 0; i < more.length; i++) {\n        const element = more[i];\n        let result = await fetch(`https://api.github.com/repos/${element.name}`)\n        data.push((await result.json()))\n    }\n    data = [...data, ...data2]\n    console.log(data)\n    let i = 0\n    data = data.sort((a, b) => b.stargazers_count - a.stargazers_count)\n    if (selectedRepo.length > 1) {\n        data = data.filter(r => selectedRepo.includes(r.name))\n        // hiding the show more\n    }\n    console.log(data)\n    for (let repo of data) {\n        i++\n        let repoDescription = repo.description ? parseDesc(repo.description) : \"No Description Specified\";\n        let text = `\n        <div class=\"card w-64 ${i > 10 ? \"hidden\" : \"\"} mt-9 overflow-visible dark:text-white shadow-xl dark:bg-gray-800 place-self-center h-52 ${repo.fork ? \"indicator\" : \"\"}\">\n            ${repo.fork ? '<span class=\"indicator-item badge badge-primary\">Forked</span>' : \"\"}\n            <div class=\"card-body flex-none my-auto\">\n                <h2 class=\"card-title mx-auto\">${parseDesc(repo.name)}</h2>\n                <p>${repoDescription}</p>\n            </div>\n            <div class=\"card-actions pb-5 text-center mx-auto\">\n                <button class=\"btn btn-primary justify-end tooltip\" data-tip=\"Star:${repo.stargazers_count}&#xa;Forks:${repo.forks_count}&#xa;${more.find(a => a.name === repo.full_name) ? `Infomation: ${more.find(a => a.name === repo.full_name).additional}` : \"\"}\">Information</button>\n                <a class=\"btn btn-primary justify-end\" href=\"https://github.com/${repo.full_name}\">Open</a>\n            </div>\n        </div>\n    `\n        const el = document.querySelector(\"#repos\")\n        if (el) {\n            el.innerHTML += text\n        }\n        if (data.length >= 10) {\n            MakeToggleButton()\n        }\n    }\n}\ngetRepos()\n\nfunction parseDesc(text) {\n    if (text.length >= 20) {\n        return text.substr(0, 20) + \"...\"\n    }\n    return text\n}\n\nfunction MakeToggleButton() {\n    let button = document.createElement(\"button\")\n    button.classList.add(...[\"btn\", \"btn-primary\"])\n    button.setAttribute(\"id\", \"ToggleRepo\")\n    button.innerText = \"Show More\"\n    button.setAttribute(\"onclick\", \"TogRepo()\")\n    const repo = document.getElementById(\"PlaceholderRepo\")\n    if (repo) {\n        repo.appendChild(button)\n    }\n}\n\nfunction TogRepo() {\n    let btn = document.querySelector(\"#ToggleRepo\")\n    if (btn.innerText === \"SHOW MORE\") {\n        document.querySelectorAll(\"#repos > div.hidden\").forEach((el) => {\n            el.classList.remove(\"hidden\")\n            el.classList.add(\"hiddenToggled\")\n            btn.innerText = \"Show Less\"\n        })\n    } else {\n        document.querySelectorAll(\"#repos > div.hiddenToggled\").forEach((el) => {\n            el.classList.add(\"hidden\")\n            el.classList.remove(\"hiddenToggled\")\n            btn.innerText = \"Show More\"\n        })\n    }\n}\n\n// const scrollPage = new ScrollPage(\"#content-wrapper\",{\n//     pages:{\n// \t    //for page 1\n//         1:{\n//             animation:\"easeInQuart\",\n//             time:1000\n//         },\n//         //for page 2\n//         2:{\n//             animation:\"easeOutQuint\",\n//             time:500\n//         },\n//         //for page 3\n//         3:{\n//             animation:\"easeOutCubic\",\n//             time:700\n//         }\n//     }\n// }); "],"names":["Brand","document","getElementById","async","get","name","res","fetch","data","json","el","src","avatar_url","console","log","setInterval","textContent","selectedRepo","more","additional","getRepos","res2","data2","i","length","element","result","push","i1","sort","a","b","stargazers_count","filter","r","includes","repo","repoDescription","description","parseDesc","text","fork","forks_count","find","full_name","querySelector","innerHTML","MakeToggleButton","substr","button","createElement","classList","add","setAttribute","innerText","appendChild","TogRepo","btn","querySelectorAll","forEach","remove"],"version":3,"file":"index.b8cf8104.js.map"}