{"mappings":"AAAA,IAAIA,MAAQC,SAASC,eAAe,YAYpCC,eAAeC,IAAIC,GACf,MAAMC,QAAYC,MAAM,gCAAgCF,KAClDG,QAAaF,EAAIG,OACjBC,EAAKT,SAASC,eAAe,YAC/BQ,IACAA,EAAGC,IAAMH,EAAKI,YAElBC,QAAQC,IAAIN,EAAKI,WACrB,CAIAT,eAAeY,WACX,MAAMT,QAAYC,MAAM,gFAClBS,SAAEA,EAAU,gBAAiBC,SAAsBX,EAAIG,OACvDS,EAAQ,IAAIF,KAAaC,GAAaE,KAAKC,IACxC,IACFA,EACHf,KAAMe,EAAKA,KAAKC,MAAM,KAAK,GAC3BC,UAAWF,EAAKA,KAChBG,iBAAkB,KAClBC,YAAa,KACbC,MAAM,MAIV,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAMS,OAAQD,IAAK,CACrC,MAAMN,EAAOF,EAAMQ,GACbE,QAAerB,MAAM,gCAAgCa,EAAKE,aAC1Dd,QAAaoB,EAAOnB,OAC1BS,EAAMQ,GAAK,IACNN,EACHG,iBAAkBf,EAAKe,iBACvBC,YAAahB,EAAKgB,YAClBC,KAAMjB,EAAKiB,KAEf,CAEA,MAAMI,EAAYX,EACfY,MAAK,CAACC,EAAGC,IAAMA,EAAET,iBAAmBQ,EAAER,mBACtCJ,KAAI,CAACC,EAAMa,KAeV,IAAIC,EAAO,GACRd,EAAKc,KAAKC,MAAMC,GAAQA,EAAIC,cAAcC,SAAS,WAClDJ,EAAOd,EAAKc,KAAKK,QAAQH,GAAQA,EAAIC,cAAcC,SAAS,UAC5DJ,EAAOA,EAAKf,KAAKiB,GAAQA,EAAIC,cAAcG,QAAQ,QAAQ,MAC3DN,EAAOA,EAAKO,KAAK,MAEjBP,EAAOd,EAAKc,KAAKO,KAAK,KAgB1B,MAba,gWAIuHrB,EAAKsB,6MAElBtB,EAAKE,gFAAgFY,0HAOrM,IAERO,KAAK,IAEF/B,EAAKT,SAAS0C,cAAc,UAC9BjC,IACFA,EAAGkC,UAAYf,GAGbX,EAAMS,OAAS,IACjBkB,kBAEJ,CAKF,SAASC,UAAUC,GACf,OAAIA,EAAKpB,QAAU,GACRoB,EAAKC,OAAO,EAAG,IAAM,MAEzBD,CACX,CAEA,SAASF,mBACL,IAAII,EAAShD,SAASiD,cAAc,UACpCD,EAAOE,UAAUC,IAAQ,MAAO,eAChCH,EAAOI,aAAa,KAAM,cAC1BJ,EAAOK,UAAY,YACnBL,EAAOI,aAAa,UAAW,aAC/B,MAAMjC,EAAOnB,SAASC,eAAe,mBACjCkB,GACAA,EAAKmC,YAAYN,EAEzB,CAEA,SAASO,UACL,IAAIC,EAAMxD,SAAS0C,cAAc,eACX,cAAlBc,EAAIH,UACJrD,SAASyD,iBAAiB,uBAAuBC,SAASjD,IACtDA,EAAGyC,UAAUS,OAAO,UACpBlD,EAAGyC,UAAUC,IAAI,iBACjBK,EAAIH,UAAY,eAGpBrD,SAASyD,iBAAiB,8BAA8BC,SAASjD,IAC7DA,EAAGyC,UAAUC,IAAI,UACjB1C,EAAGyC,UAAUS,OAAO,iBACpBH,EAAIH,UAAY,cAG5B,CA1IAO,IAAIC,OAEJC,aAAY,KACkB,UAAtB/D,MAAMgE,YACNhE,MAAMgE,YAAc,UAEpBhE,MAAMgE,YAAc,UAEzB,MAYH5D,IAAI,WAiFFW","sources":["src/assets/js/index.js"],"sourcesContent":["let Brand = document.getElementById(\"NavBrand\")\n\nAOS.init();\n\nsetInterval(() => {\n    if (Brand.textContent === \"MoonL\") {\n        Brand.textContent = \"Tsukari\"\n    } else {\n        Brand.textContent = \"MoonL\"\n    }\n}, 1500)\n\nasync function get(name) {\n    const res = await fetch(`https://api.github.com/users/${name}`)\n    const data = await res.json()\n    const el = document.getElementById(\"GHAvatar\")\n    if (el) {\n        el.src = data.avatar_url\n    }\n    console.log(data.avatar_url)\n}\n\nget(\"MoonLGH\")\n\nasync function getRepos() {\n    const res = await fetch(`https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/data.json`);\n    const { projects, \"fcc-front-end\": fccFrontEnd } = await res.json();\n    const repos = [...projects, ...fccFrontEnd].map((repo) => {\n      return {\n        ...repo,\n        name: repo.repo.split(\"/\")[1],\n        full_name: repo.repo,\n        stargazers_count: null,\n        forks_count: null,\n        fork: false,\n      };\n    });\n  \n    for (let i = 0; i < repos.length; i++) {\n      const repo = repos[i];\n      const result = await fetch(`https://api.github.com/repos/${repo.full_name}`);\n      const data = await result.json();\n      repos[i] = {\n        ...repo,\n        stargazers_count: data.stargazers_count,\n        forks_count: data.forks_count,\n        fork: data.fork,\n      };\n    }\n  \n    const reposHtml = repos\n      .sort((a, b) => b.stargazers_count - a.stargazers_count)\n      .map((repo, index) => {\n        // const repoDescription = repo.description ? parseDesc(repo.description) : \"No Description Specified\";\n        // const text = `\n        //   <div class=\"card w-64 ${index > 9 ? \"hidden\" : \"\"} mt-9 overflow-visible shadow-xl dark:bg-gray-800 place-self-center h-52 ${repo.fork ? \"indicator\" : \"\"}\">\n        //     ${repo.fork ? '<span class=\"indicator-item badge badge-primary\">Forked</span>' : \"\"}\n        //     <div class=\"card-body flex-none my-auto\">\n        //       <h2 class=\"card-title mx-auto dark:text-white\">${parseDesc(repo.name)}</h2>\n        //       <p>${repoDescription}</p>\n        //     </div>\n        //     <div class=\"card-actions pb-5 text-center mx-auto\">\n        //       <button class=\"btn btn-primary justify-end tooltip\" data-tip=\"Star:${repo.stargazers_count}&#xa;Forks:${repo.forks_count}\">Information</button>\n        //       <a class=\"btn btn-primary justify-end\" href=\"https://github.com/${repo.full_name}\">Open</a>\n        //     </div>\n        //   </div>\n        // `;\n        let tech = []\n        if(repo.tech.find((arr) => arr.toLowerCase().includes(\"show\"))){\n            tech = repo.tech.filter((arr) => arr.toLowerCase().includes(\"show\"))\n            tech = tech.map((arr) => arr.toLowerCase().replace(\"-show\",\"\"))\n            tech = tech.join(\",\")\n        } else {\n            tech = repo.tech.join(\",\")\n        }\n\n        const text = `\n            <div>\n                <a aria-label=\"Single Project\">\n                    <div class=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark\">\n                        <div><img class=\"rounded-t-xl border-none\" src=\"https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/${repo.path}\" /></div>\n                        <div class=\"text-center px-4 py-6\">\n                            <p class=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">${repo.full_name}</p><span class=\"text-lg text-ternary-dark dark:text-ternary-light\">${tech}</span>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        `;\n\n        return text;\n      })\n      .join(\"\");\n  \n    const el = document.querySelector(\"#repos\");\n    if (el) {\n      el.innerHTML = reposHtml;\n    }\n  \n    if (repos.length > 10) {\n      MakeToggleButton();\n    }\n  }\n  \n  getRepos();\n  \n\nfunction parseDesc(text) {\n    if (text.length >= 20) {\n        return text.substr(0, 20) + \"...\"\n    }\n    return text\n}\n\nfunction MakeToggleButton() {\n    let button = document.createElement(\"button\")\n    button.classList.add(...[\"btn\", \"btn-primary\"])\n    button.setAttribute(\"id\", \"ToggleRepo\")\n    button.innerText = \"Show More\"\n    button.setAttribute(\"onclick\", \"TogRepo()\")\n    const repo = document.getElementById(\"PlaceholderRepo\")\n    if (repo) {\n        repo.appendChild(button)\n    }\n}\n\nfunction TogRepo() {\n    let btn = document.querySelector(\"#ToggleRepo\")\n    if (btn.innerText === \"SHOW MORE\") {\n        document.querySelectorAll(\"#repos > div.hidden\").forEach((el) => {\n            el.classList.remove(\"hidden\")\n            el.classList.add(\"hiddenToggled\")\n            btn.innerText = \"Show Less\"\n        })\n    } else {\n        document.querySelectorAll(\"#repos > div.hiddenToggled\").forEach((el) => {\n            el.classList.add(\"hidden\")\n            el.classList.remove(\"hiddenToggled\")\n            btn.innerText = \"Show More\"\n        })\n    }\n}\n\n// const scrollPage = new ScrollPage(\"#content-wrapper\",{\n//     pages:{\n// \t    //for page 1\n//         1:{\n//             animation:\"easeInQuart\",\n//             time:1000\n//         },\n//         //for page 2\n//         2:{\n//             animation:\"easeOutQuint\",\n//             time:500\n//         },\n//         //for page 3\n//         3:{\n//             animation:\"easeOutCubic\",\n//             time:700\n//         }\n//     }\n// }); "],"names":["Brand","document","getElementById","async","get","name","res","fetch","data","json","el","src","avatar_url","console","log","getRepos","projects","fccFrontEnd","repos","map","repo","split","full_name","stargazers_count","forks_count","fork","i","length","result","reposHtml","sort","a","b","index","tech","find","arr","toLowerCase","includes","filter","replace","join","path","querySelector","innerHTML","MakeToggleButton","parseDesc","text","substr","button","createElement","classList","add","setAttribute","innerText","appendChild","TogRepo","btn","querySelectorAll","forEach","remove","AOS","init","setInterval","textContent"],"version":3,"file":"index.5ea2e219.js.map"}