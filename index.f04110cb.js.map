{"mappings":"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","sources":["<anon>","src/assets/js/index.js"],"sourcesContent":["let Brand = document.getElementById(\"NavBrand\");\nAOS.init();\nsetInterval(()=>{\n    if (Brand.textContent === \"MoonL\") Brand.textContent = \"Tsukari\";\n    else Brand.textContent = \"MoonL\";\n}, 1500);\nasync function get(name) {\n    const res = await fetch(`https://api.github.com/users/${name}`);\n    const data = await res.json();\n    const el = document.getElementById(\"GHAvatar\");\n    if (el) el.src = data.avatar_url;\n    console.log(data.avatar_url);\n}\nget(\"MoonLGH\");\nasync function getRepos() {\n    const res = await fetch(`https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/data.json`);\n    const { projects, \"fcc-front-end\": fccFrontEnd } = await res.json();\n    const repos = [\n        ...projects\n    ].map((repo)=>{\n        return {\n            ...repo,\n            name: repo.repo.split(\"/\")[1],\n            full_name: repo.repo,\n            stargazers_count: null,\n            forks_count: null,\n            fork: false\n        };\n    });\n    for(let i = 0; i < repos.length; i++){\n        const repo = repos[i];\n        const result = await fetch(`https://api.github.com/repos/${repo.full_name}`);\n        const data = await result.json();\n        repos[i] = {\n            ...repo,\n            stargazers_count: data.stargazers_count,\n            forks_count: data.forks_count,\n            fork: data.fork\n        };\n    }\n    const reposHtml = repos.sort((a, b)=>b.stargazers_count - a.stargazers_count).map((repo, index)=>{\n        // const repoDescription = repo.description ? parseDesc(repo.description) : \"No Description Specified\";\n        // const text = `\n        //   <div class=\"card w-64 ${index > 9 ? \"hidden\" : \"\"} mt-9 overflow-visible shadow-xl dark:bg-gray-800 place-self-center h-52 ${repo.fork ? \"indicator\" : \"\"}\">\n        //     ${repo.fork ? '<span class=\"indicator-item badge badge-primary\">Forked</span>' : \"\"}\n        //     <div class=\"card-body flex-none my-auto\">\n        //       <h2 class=\"card-title mx-auto dark:text-white\">${parseDesc(repo.name)}</h2>\n        //       <p>${repoDescription}</p>\n        //     </div>\n        //     <div class=\"card-actions pb-5 text-center mx-auto\">\n        //       <button class=\"btn btn-primary justify-end tooltip\" data-tip=\"Star:${repo.stargazers_count}&#xa;Forks:${repo.forks_count}\">Information</button>\n        //       <a class=\"btn btn-primary justify-end\" href=\"https://github.com/${repo.full_name}\">Open</a>\n        //     </div>\n        //   </div>\n        // `;\n        let tech = [];\n        if (repo.tech.find((arr)=>arr.toLowerCase().includes(\"show\"))) {\n            tech = repo.tech.filter((arr)=>arr.toLowerCase().includes(\"show\"));\n            tech = tech.map((arr)=>arr.toLowerCase().replace(\"-show\", \"\"));\n            tech = tech.join(\",\");\n        } else tech = repo.tech.join(\",\");\n        let optional = ``;\n        if (repo.url) optional = `<a class=\"btn btn-primary justify-end normal-case\" href=\"${repo.url}\">Open</a>`;\n        optional += `<a class=\"btn btn-primary justify-end normal-case\" href=\"https://github.com/${repo.full_name}\">Open Repo</a>`;\n        const text = `\n            <div>\n                    <div class=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark pb-8\">\n                        <div><img class=\"rounded-t-xl border-none\" src=\"https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/${repo.path}\" /></div>\n                        <div class=\"text-center px-4 py-6\">\n                            <p class=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">${repo.full_name}</p><span class=\"text-lg text-ternary-dark dark:text-ternary-light\">${tech}</span>\n                        </div>\n                        <div class=\"card-actions pt-2 text-center mx-auto place-content-center\">\n                            <button class=\"btn justify-end tooltip whitespace-pre-wrap w-min\"\n                                data-tip=\"${repo.description}\">Information</button>\n                            ${optional}\n                        </div>\n                    </div>\n            </div>\n        `;\n        return text;\n    }).join(\"\");\n    const el = document.querySelector(\"#repos\");\n    if (el) el.innerHTML = reposHtml;\n    putFccFrontEnd(fccFrontEnd);\n    if (repos.length > 10) MakeToggleButton();\n}\nasync function putFccFrontEnd(frontend) {\n    frontend = frontend.map((repo)=>{\n        return {\n            ...repo,\n            name: repo.repo.split(\"/\")[1],\n            full_name: repo.repo,\n            stargazers_count: null,\n            forks_count: null,\n            fork: false\n        };\n    });\n    for(let i = 0; i < frontend.length; i++){\n        const repo = frontend[i];\n        const result = await fetch(`https://api.github.com/repos/${repo.full_name}`);\n        const data = await result.json();\n        frontend[i] = {\n            ...repo,\n            stargazers_count: data.stargazers_count,\n            forks_count: data.forks_count,\n            fork: data.fork\n        };\n    }\n    const reposHtml = frontend.sort((a, b)=>b.stargazers_count - a.stargazers_count).map((repo, index)=>{\n        // const repoDescription = repo.description ? parseDesc(repo.description) : \"No Description Specified\";\n        // const text = `\n        //   <div class=\"card w-64 ${index > 9 ? \"hidden\" : \"\"} mt-9 overflow-visible shadow-xl dark:bg-gray-800 place-self-center h-52 ${repo.fork ? \"indicator\" : \"\"}\">\n        //     ${repo.fork ? '<span class=\"indicator-item badge badge-primary\">Forked</span>' : \"\"}\n        //     <div class=\"card-body flex-none my-auto\">\n        //       <h2 class=\"card-title mx-auto dark:text-white\">${parseDesc(repo.name)}</h2>\n        //       <p>${repoDescription}</p>\n        //     </div>\n        //     <div class=\"card-actions pb-5 text-center mx-auto\">\n        //       <button class=\"btn btn-primary justify-end tooltip\" data-tip=\"Star:${repo.stargazers_count}&#xa;Forks:${repo.forks_count}\">Information</button>\n        //       <a class=\"btn btn-primary justify-end\" href=\"https://github.com/${repo.full_name}\">Open</a>\n        //     </div>\n        //   </div>\n        // `;\n        let tech = [];\n        if (repo.tech.find((arr)=>arr.toLowerCase().includes(\"show\"))) {\n            tech = repo.tech.filter((arr)=>arr.toLowerCase().includes(\"show\"));\n            tech = tech.map((arr)=>arr.toLowerCase().replace(\"-show\", \"\"));\n            tech = tech.join(\",\");\n        } else tech = repo.tech.join(\",\");\n        let optional = ``;\n        if (repo.url) optional = `<a class=\"btn btn-primary justify-end normal-case\" href=\"${repo.url}\">Open</a>`;\n        optional += `<a class=\"btn btn-primary justify-end normal-case\" href=\"https://github.com/${repo.full_name}\">Open Repo</a>`;\n        const text = `\n            <div>\n                    <div class=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark pb-8\">\n                        <div><img class=\"rounded-t-xl border-none\" src=\"https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/${repo.path}\" /></div>\n                        <div class=\"text-center px-4 py-6\">\n                            <p class=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">${repo.full_name}</p><span class=\"text-lg text-ternary-dark dark:text-ternary-light\">${tech}</span>\n                        </div>\n                        <div class=\"card-actions pt-2 text-center mx-auto place-content-center\">\n                            <button class=\"btn justify-end tooltip whitespace-pre-wrap w-min\"\n                                data-tip=\"${repo.description}\">Information</button>\n                            ${optional}\n                        </div>\n                    </div>\n            </div>\n        `;\n        return text;\n    }).join(\"\");\n    const el = document.querySelector(\"#fccRepos\");\n    if (el) el.innerHTML = reposHtml;\n}\ngetRepos();\nfunction parseDesc(text) {\n    if (text.length >= 20) return text.substr(0, 20) + \"...\";\n    return text;\n}\nfunction MakeToggleButton() {\n    let button = document.createElement(\"button\");\n    button.classList.add(...[\n        \"btn\",\n        \"btn-primary\"\n    ]);\n    button.setAttribute(\"id\", \"ToggleRepo\");\n    button.innerText = \"Show More\";\n    button.setAttribute(\"onclick\", \"TogRepo()\");\n    const repo = document.getElementById(\"PlaceholderRepo\");\n    if (repo) repo.appendChild(button);\n}\nfunction TogRepo() {\n    let btn = document.querySelector(\"#ToggleRepo\");\n    if (btn.innerText === \"SHOW MORE\") document.querySelectorAll(\"#repos > div.hidden\").forEach((el)=>{\n        el.classList.remove(\"hidden\");\n        el.classList.add(\"hiddenToggled\");\n        btn.innerText = \"Show Less\";\n    });\n    else document.querySelectorAll(\"#repos > div.hiddenToggled\").forEach((el)=>{\n        el.classList.add(\"hidden\");\n        el.classList.remove(\"hiddenToggled\");\n        btn.innerText = \"Show More\";\n    });\n} // const scrollPage = new ScrollPage(\"#content-wrapper\",{\n //     pages:{\n // \t    //for page 1\n //         1:{\n //             animation:\"easeInQuart\",\n //             time:1000\n //         },\n //         //for page 2\n //         2:{\n //             animation:\"easeOutQuint\",\n //             time:500\n //         },\n //         //for page 3\n //         3:{\n //             animation:\"easeOutCubic\",\n //             time:700\n //         }\n //     }\n // }); \n\n//# sourceMappingURL=index.f04110cb.js.map\n","let Brand = document.getElementById(\"NavBrand\")\n\nAOS.init();\n\nsetInterval(() => {\n    if (Brand.textContent === \"MoonL\") {\n        Brand.textContent = \"Tsukari\"\n    } else {\n        Brand.textContent = \"MoonL\"\n    }\n}, 1500)\n\nasync function get(name) {\n    const res = await fetch(`https://api.github.com/users/${name}`)\n    const data = await res.json()\n    const el = document.getElementById(\"GHAvatar\")\n    if (el) {\n        el.src = data.avatar_url\n    }\n    console.log(data.avatar_url)\n}\n\nget(\"MoonLGH\")\n\nasync function getRepos() {\n    const res = await fetch(`https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/data.json`);\n    const { projects, \"fcc-front-end\": fccFrontEnd } = await res.json();\n    const repos = [...projects].map((repo) => {\n      return {\n        ...repo,\n        name: repo.repo.split(\"/\")[1],\n        full_name: repo.repo,\n        stargazers_count: null,\n        forks_count: null,\n        fork: false,\n      };\n    });\n  \n    for (let i = 0; i < repos.length; i++) {\n      const repo = repos[i];\n      const result = await fetch(`https://api.github.com/repos/${repo.full_name}`);\n      const data = await result.json();\n      repos[i] = {\n        ...repo,\n        stargazers_count: data.stargazers_count,\n        forks_count: data.forks_count,\n        fork: data.fork,\n      };\n    }\n  \n    const reposHtml = repos\n      .sort((a, b) => b.stargazers_count - a.stargazers_count)\n      .map((repo, index) => {\n        // const repoDescription = repo.description ? parseDesc(repo.description) : \"No Description Specified\";\n        // const text = `\n        //   <div class=\"card w-64 ${index > 9 ? \"hidden\" : \"\"} mt-9 overflow-visible shadow-xl dark:bg-gray-800 place-self-center h-52 ${repo.fork ? \"indicator\" : \"\"}\">\n        //     ${repo.fork ? '<span class=\"indicator-item badge badge-primary\">Forked</span>' : \"\"}\n        //     <div class=\"card-body flex-none my-auto\">\n        //       <h2 class=\"card-title mx-auto dark:text-white\">${parseDesc(repo.name)}</h2>\n        //       <p>${repoDescription}</p>\n        //     </div>\n        //     <div class=\"card-actions pb-5 text-center mx-auto\">\n        //       <button class=\"btn btn-primary justify-end tooltip\" data-tip=\"Star:${repo.stargazers_count}&#xa;Forks:${repo.forks_count}\">Information</button>\n        //       <a class=\"btn btn-primary justify-end\" href=\"https://github.com/${repo.full_name}\">Open</a>\n        //     </div>\n        //   </div>\n        // `;\n        let tech = []\n        if(repo.tech.find((arr) => arr.toLowerCase().includes(\"show\"))){\n            tech = repo.tech.filter((arr) => arr.toLowerCase().includes(\"show\"))\n            tech = tech.map((arr) => arr.toLowerCase().replace(\"-show\",\"\"))\n            tech = tech.join(\",\")\n        } else {\n            tech = repo.tech.join(\",\")\n        }\n\n        let optional = ``\n\n        if (repo.url) {\n            optional = `<a class=\"btn btn-primary justify-end normal-case\" href=\"${repo.url}\">Open</a>`\n        }\n\n            optional += `<a class=\"btn btn-primary justify-end normal-case\" href=\"https://github.com/${repo.full_name}\">Open Repo</a>`\n        const text = `\n            <div>\n                    <div class=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark pb-8\">\n                        <div><img class=\"rounded-t-xl border-none\" src=\"https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/${repo.path}\" /></div>\n                        <div class=\"text-center px-4 py-6\">\n                            <p class=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">${repo.full_name}</p><span class=\"text-lg text-ternary-dark dark:text-ternary-light\">${tech}</span>\n                        </div>\n                        <div class=\"card-actions pt-2 text-center mx-auto place-content-center\">\n                            <button class=\"btn justify-end tooltip whitespace-pre-wrap w-min\"\n                                data-tip=\"${repo.description}\">Information</button>\n                            ${optional}\n                        </div>\n                    </div>\n            </div>\n        `;\n\n        return text;\n      })\n      .join(\"\");\n  \n    const el = document.querySelector(\"#repos\");\n    if (el) {\n      el.innerHTML = reposHtml;\n    }\n  \n    putFccFrontEnd(fccFrontEnd)\n    if (repos.length > 10) {\n      MakeToggleButton();\n    }\n  }\n  \n\nasync function putFccFrontEnd(frontend) {\n    frontend = frontend.map((repo) => {\n        return {\n            ...repo,\n            name: repo.repo.split(\"/\")[1],\n            full_name: repo.repo,\n            stargazers_count: null,\n            forks_count: null,\n            fork: false,\n        };\n    }\n    );\n\n    for (let i = 0; i < frontend.length; i++) { \n        const repo = frontend[i];\n        const result = await fetch(`https://api.github.com/repos/${repo.full_name}`);\n        const data = await result.json();\n        frontend[i] = {\n            ...repo,\n            stargazers_count: data.stargazers_count,\n            forks_count: data.forks_count,\n            fork: data.fork,\n        };\n    }\n    \n    const reposHtml = frontend\n      .sort((a, b) => b.stargazers_count - a.stargazers_count)\n      .map((repo, index) => {\n        // const repoDescription = repo.description ? parseDesc(repo.description) : \"No Description Specified\";\n        // const text = `\n        //   <div class=\"card w-64 ${index > 9 ? \"hidden\" : \"\"} mt-9 overflow-visible shadow-xl dark:bg-gray-800 place-self-center h-52 ${repo.fork ? \"indicator\" : \"\"}\">\n        //     ${repo.fork ? '<span class=\"indicator-item badge badge-primary\">Forked</span>' : \"\"}\n        //     <div class=\"card-body flex-none my-auto\">\n        //       <h2 class=\"card-title mx-auto dark:text-white\">${parseDesc(repo.name)}</h2>\n        //       <p>${repoDescription}</p>\n        //     </div>\n        //     <div class=\"card-actions pb-5 text-center mx-auto\">\n        //       <button class=\"btn btn-primary justify-end tooltip\" data-tip=\"Star:${repo.stargazers_count}&#xa;Forks:${repo.forks_count}\">Information</button>\n        //       <a class=\"btn btn-primary justify-end\" href=\"https://github.com/${repo.full_name}\">Open</a>\n        //     </div>\n        //   </div>\n        // `;\n        let tech = []\n        if(repo.tech.find((arr) => arr.toLowerCase().includes(\"show\"))){\n            tech = repo.tech.filter((arr) => arr.toLowerCase().includes(\"show\"))\n            tech = tech.map((arr) => arr.toLowerCase().replace(\"-show\",\"\"))\n            tech = tech.join(\",\")\n        } else {\n            tech = repo.tech.join(\",\")\n        }\n\n        let optional = ``\n\n        if (repo.url) {\n            optional = `<a class=\"btn btn-primary justify-end normal-case\" href=\"${repo.url}\">Open</a>`\n        }\n\n            optional += `<a class=\"btn btn-primary justify-end normal-case\" href=\"https://github.com/${repo.full_name}\">Open Repo</a>`\n        const text = `\n            <div>\n                    <div class=\"rounded-xl shadow-lg hover:shadow-xl cursor-pointer mb-10 sm:mb-0 bg-secondary-light dark:bg-ternary-dark pb-8\">\n                        <div><img class=\"rounded-t-xl border-none\" src=\"https://raw.githubusercontent.com/MoonLGH/portfolio-assets/output/${repo.path}\" /></div>\n                        <div class=\"text-center px-4 py-6\">\n                            <p class=\"font-general-medium text-lg md:text-xl text-ternary-dark dark:text-ternary-light mb-2\">${repo.full_name}</p><span class=\"text-lg text-ternary-dark dark:text-ternary-light\">${tech}</span>\n                        </div>\n                        <div class=\"card-actions pt-2 text-center mx-auto place-content-center\">\n                            <button class=\"btn justify-end tooltip whitespace-pre-wrap w-min\"\n                                data-tip=\"${repo.description}\">Information</button>\n                            ${optional}\n                        </div>\n                    </div>\n            </div>\n        `;\n\n        return text;\n      })\n      .join(\"\");\n\n    const el = document.querySelector(\"#fccRepos\");\n    if (el) {\n        el.innerHTML = reposHtml;\n        }\n\n\n\n}\n\ngetRepos();\n  \n\nfunction parseDesc(text) {\n    if (text.length >= 20) {\n        return text.substr(0, 20) + \"...\"\n    }\n    return text\n}\n\nfunction MakeToggleButton() {\n    let button = document.createElement(\"button\")\n    button.classList.add(...[\"btn\", \"btn-primary\"])\n    button.setAttribute(\"id\", \"ToggleRepo\")\n    button.innerText = \"Show More\"\n    button.setAttribute(\"onclick\", \"TogRepo()\")\n    const repo = document.getElementById(\"PlaceholderRepo\")\n    if (repo) {\n        repo.appendChild(button)\n    }\n}\n\nfunction TogRepo() {\n    let btn = document.querySelector(\"#ToggleRepo\")\n    if (btn.innerText === \"SHOW MORE\") {\n        document.querySelectorAll(\"#repos > div.hidden\").forEach((el) => {\n            el.classList.remove(\"hidden\")\n            el.classList.add(\"hiddenToggled\")\n            btn.innerText = \"Show Less\"\n        })\n    } else {\n        document.querySelectorAll(\"#repos > div.hiddenToggled\").forEach((el) => {\n            el.classList.add(\"hidden\")\n            el.classList.remove(\"hiddenToggled\")\n            btn.innerText = \"Show More\"\n        })\n    }\n}\n\n// const scrollPage = new ScrollPage(\"#content-wrapper\",{\n//     pages:{\n// \t    //for page 1\n//         1:{\n//             animation:\"easeInQuart\",\n//             time:1000\n//         },\n//         //for page 2\n//         2:{\n//             animation:\"easeOutQuint\",\n//             time:500\n//         },\n//         //for page 3\n//         3:{\n//             animation:\"easeOutCubic\",\n//             time:700\n//         }\n//     }\n// }); "],"names":["Brand","document","getElementById","putFccFrontEnd","frontend","map","repo","name","split","full_name","stargazers_count","forks_count","fork","i","length","result","fetch","data","json","reposHtml","sort","a","b","index","tech","find","arr","toLowerCase","includes","filter","replace","join","optional","url","text","path","description","el","querySelector","innerHTML","AOS","init","setInterval","textContent","get","res","src","avatar_url","console","log","getRepos","projects","fccFrontEnd","repos","MakeToggleButton","button","createElement","classList","add","setAttribute","innerText","appendChild"],"version":3,"file":"index.f04110cb.js.map"}